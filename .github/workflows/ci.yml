## This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
## For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
#
#name: Node.js CI
#
#on:
#  push:
#    branches: [ "master" ]
##  pull_request:
##    branches: [ "master" ]
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        node-version: [21.x]
#        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
#    steps:
#    - name: Checkout üõéÔ∏è
#      uses: actions/checkout@v4
#
#    - name: Install and Build
#      uses: actions/setup-node@v4
#      with:
#        node-version: ${{ matrix.node-version }}
#        cache: 'npm'
#    - run: npm ci
#    - run: npm run build
#
#    - name: Build and Deploy
#      uses: JamesIves/github-pages-deploy-action@releases/v4
#      with:
#        folder: dist/apps/demo-ng-openlayers

name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches: [ "staging" ]

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
#      - run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="e2e-ci"

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci --legacy-peer-deps
      - uses: nrwl/nx-set-shas@v4
        with:
          # The "main" branch of your repository (the base branch which you target with PRs).
          # Common names for this branch include main and master.
          #
          # Default: main
          main-branch-name: 'staging'

      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
      # - run: npx nx-cloud record -- echo Hello World
      # Nx Affected runs only tasks affected by the changes in this PR/commit. Learn more: https://nx.dev/ci/features/affected
#      - run: npx nx affected -t lint test build
      - run: npx nx affected -t build
      - run: npx nx affected --parallel 1 -t e2e-ci

